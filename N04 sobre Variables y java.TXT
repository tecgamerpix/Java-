GANA JAVA: VARIABLES
Introducción
Digamos que necesitamos un programa que conecte a un usuario con nuevos trabajos. 
Necesitamos el nombre del usuario, su salario y su situación laboral. Toda esta información se almacena en nuestro programa.

Almacenamos información en variables, ubicaciones nombradas en memoria.

Nombrar una parte de la información nos permite usar ese nombre más tarde, accediendo a la información que almacenamos.

Las variables también dan contexto y significado a los datos que estamos almacenando. 
El valor 42 podría ser la edad de alguien, un peso en libras o el número de pedidos realizados. Con un nombre, sabemos que el valor 42 es age, weightInPounds o numOrdersPlaced.

En Java, especificamos el tipo de información que estamos almacenando. 
Los tipos de datos primitivos son tipos de datos incorporados al sistema Java.

Debemos declarar una variable para referenciarla dentro de nuestro programa. 
Declarar una variable requiere que especifiquemos el tipo y el nombre:
///////////////////////////
// datatype variableName
int age;
double salaryRequirement;
boolean isEmployed;
///////////////////////

Los tipos de estas variables son int, double y boolean. Esta lección introducirá estos tipos incorporados y más.

Los nombres de las variables son age, salarioRequirement y isEmployed.

Estas variables no tienen ningún valor asociado. Para asignar un valor a una variable, usamos el operador de asignación 
//////////
age = 85;

¡Es común declarar una variable y asignar el valor en una línea!

Por ejemplo, para asignar 2011 a una variable llamada yearCodecademyWasFounded de tipo int, escribimos:
//////////////
int yearCodecademyWasFounded = 2011;
////////////////////////


El primer tipo de datos que almacenaremos es el número entero. 
Los números enteros son muy comunes en la programación.
Con frecuencia, los utiliza para almacenar edades, tamaños máximos o la cantidad de veces que se ha ejecutado algún código, 
entre muchos otros usos.

En Java, los números enteros se almacenan en el tipo de datos primitivos int.

Los ints tienen números positivos, números negativos y cero. No almacenan fracciones ni números con decimales.

El tipo de datos int permite valores entre -2,147,483,648 y 2,147,483,647, inclusive.

Para declarar una variable de tipo int, usamos la palabra clave int antes del nombre de la variable:
//////////////////////////////////////
// int variable declaration
int yearJavaWasCreated;
// assignment
yearJavaWasCreated = 1996;
// declaration and assignment
int numberOfPrimitiveTypes = 8;
////////////////////////////////////

dobles
Los números enteros no cumplen con lo que necesitamos para cada programa. 
¿Y si quisiéramos almacenar el precio de algo? Necesitamos un punto decimal. 
¿Y si quisiéramos almacenar la población mundial? Ese número sería más grande de lo que puede contener el tipo int.

El tipo de datos primitivo doble puede ayudar.
El doble puede contener decimales, así como números muy grandes y muy pequeños. 
El valor máximo es 1.797.693.134.862.315,7 E + 308, que es aproximadamente 17 seguido de 307 ceros.
El valor mínimo es 4.9 E-324, que es 324 lugares decimales!

Para declarar una variable de tipo double, usamos la palabra clave double en la declaración:
////////////////
// doubles can have decimal places:
double price = 8.99;
// doubles can have values bigger than what an int could hold:
double gdp = 12237700000;
///////////////

Declaramos las variables booleanas usando la palabra clave booleana antes del nombre de la variable.
/////////
boolean javaIsACompiledLanguage = true;
boolean javaIsACupOfCoffee = false;
////////

Nombrar variables de acuerdo con la convención conduce a un código claro, legible y mantenible. Cuando alguien más, o nuestro yo futuro, lee el código, no hay confusión sobre el propósito de una variable.

En Java, los nombres de variables distinguen entre mayúsculas y minúsculas. myHeight es una variable diferente de myheight. La longitud del nombre de una variable es ilimitada, pero debemos mantenerlo conciso y al mismo tiempo mantener el significado claro.

Una variable comienza con una letra válida, o $ o una _. Ningún otro símbolo o número puede comenzar un nombre de variable. 1stPlace y * Gazer no son nombres de variables válidos.

Los nombres de variable de una sola palabra están escritos en letras minúsculas. Los nombres de variable de más de una palabra tienen la primera letra en minúscula, mientras que la letra inicial de cada palabra subsiguiente está en mayúscula. Este estilo de mayúsculas se llama camelCase.

